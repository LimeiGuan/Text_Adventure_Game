@startuml DesignClassModel

title Design Class Model

class Character{
  #max_health: int
  #curr_health: int
  #attack: int
  
  +Character()
  +applyDamage()
  +setMaxHealth()
  +setAttackValue()
  +getCurrHealth()
  +getMaxHealth()
  +getAttackValue()
}

class Player{
  -buff: int
  -curr_Position: Pair<>
  -selected: boolean
  
  +Player()
  +heal()
  +equip()
  +unequip()
  +changePosition()
  +getPosition()
  +setPosition()
}

class Enemy{
  +Enemy()
}

class GameUI{
  -gameManager: GameManager
  -outputBox: TextArea
  
  +start()
  +main()
}

class GameManager{
  -player: Player
  
  +commandControl()
  +newGame()
  +gameOver()
  +room201()
  +room202()
  +room203()
  +room101()
  +room102()
  +room103()
  +hallway1()
  +hallway2()
  +mainhall()
  +controlRoom()
  +morgue()
  +lift()
}

class GameSaveService{}

class Inventory{
  -inventory: ArrayList<>
  
  +addItem()
  +removeItem()
  +searchItem()
  +displayItem()
}

class Item{
  -id_counter: int
  #id: int
  #name: String
  #description: String
  
  +Item()
  +setDescription()
  +getDescription()
  +getName()
  +getID()
}

class ItemEquipable{
  #stats: int
  
  +ItemEquipable()
  +setStats()
  +getStats()
}

class ItemInteract{
  -display_message: String[]
  
  +setDisplay()
  +Display()
}

class Medicine{}

class Weapon{
  +Weapon()
}

class Room{
  -floor: int
  -room: int
  -roomName: String
}

Character <|-- Player : extends
Character <|-- Enemy : extends

Item <|-- ItemEquipable : extends
Item <|-- ItemInteract : extends
Item"0...*" <|-- "1"Inventory : contains
item"0...*" <|-- "1"Room : has

ItemEquipable <|-- Weapon: extends
ItemEquipable <|-- Medicine: extends

Player"1" --|> "0...*"Item : uses 
Player"1" --|> "1"Inventory : has
Player"1" --|> "1"Room : located

GameManager"1" --|> "1"Player : creates
GameManager"1" --|> "n"Enemy : creates
GameManager"1" <|--|> "1"GameUI : uses
GameManager"1" --|> "n"Room : creates

@enduml
